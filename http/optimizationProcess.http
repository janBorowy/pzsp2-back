GET http://localhost:8080/optimizationProcess/
Accept: application/json
Authorization: Bearer {{admin_token}}

{
}

> {%
client.test("Request should return 200", function() {
    client.assert(response.status === 200, "Expected status 200, but got " + response.status);
});
client.global.set("optimization_process_id", response.body.id);
%}

### update optimization process all data
PUT http://localhost:8080/optimizationProcess/
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "offerAcceptanceDeadline": "2024-06-10T18:06:07.218Z",
  "optimizationTime": "2024-06-12T18:06:07.218Z"
}


### update optimization process only acceptance deadline
PUT http://localhost:8080/optimizationProcess/
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "offerAcceptanceDeadline": "2024-06-10T18:06:07.218Z"
}


### run optimization
GET {{url}}/optimizationProcess/run/{{optimization_process_id}}
Accept: application/json
Authorization: Bearer {{admin_token}}


> {%
client.test("Request should return 200", function() {
    client.assert(response.status === 200, "Expected status 200, but got " + response.status);
});
%}


### run optimization from user account expected ERROR
GET {{url}}/optimizationProcess/run/{{optimization_process_id}}
Accept: application/json
Authorization: Bearer {{worker1_token}}


> {%
client.test("Request should return 403", function() {
    client.assert(response.status === 403, "Expected status 403, but got " + response.status);
});
%}

### try update optimization process with invalid data
PUT http://localhost:8080/optimizationProcess/
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "offerAcceptanceDeadline": "2024-06-12T18:06:07.218Z",
  "optimizationTime": "2024-06-11T18:06:07.218Z"
}

> {%
client.test("Request should return 400", function() {
    client.assert(response.status === 400, "Expected status 400, but got " + response.status);
});
%}


### try update optimization process with null data (no changes in object)
PUT http://localhost:8080/optimizationProcess/
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "offerAcceptanceDeadline": "",
  "optimizationTime": ""
}

### try update optimization process with invalid data
PUT http://localhost:8080/optimizationProcess/
Content-Type: application/json
Authorization: Bearer {{admin_token}}

{
  "offerAcceptanceDeadline": "2024-06-12T18:06:07.218Z",
  "optimizationTime": "2024-06-11T18:06:07.218Z"
}

> {%
client.test("Request should return 400", function() {
    client.assert(response.status === 400, "Expected status 400, but got " + response.status);
});
%}

### try tu update optimization process from user account
PUT http://localhost:8080/optimizationProcess/
Content-Type: application/json
Authorization: Bearer {{worker1_token}}

{
  "offerAcceptanceDeadline": "2024-06-10T18:06:07.218Z",
  "optimizationTime": "2024-06-11T18:06:07.218Z"
}

> {%
client.test("Request should return 403", function() {
    client.assert(response.status === 403, "Expected status 403, but got " + response.status);
});
%}




#### create optimization process with optimization time
#POST http://localhost:8080/optimizationProcess/admin
#Content-Type: application/json
#Authorization: Bearer {{admin_token}}
#
#{
#  "offerAcceptanceDeadline": "2024-06-10T18:06:07.218Z",
#  "optimizationTime": "2024-06-11T18:06:07.218Z"
#}
#
#
#### create optimization process without optimization time
#POST http://localhost:8080/optimizationProcess/admin
#Content-Type: application/json
#Authorization: Bearer {{admin_token}}
#
#{
#  "offerAcceptanceDeadline": "2024-06-01T18:06:07.218Z"
#}